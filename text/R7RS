R7RS, http://www.scheme-reports.org/2011/working-group-1.html

Alphabetic index:

#!fold-case
#!no-fold-case
!
'
* *
* +
,
,@
* -
.
...
* /
* <
<=
* =
=>
* >
>=
* abs
* acos
* and
angle
* append
* apply
* asin
assoc
assq
assv
* atan
#b
backquote
* begin
binary-port?
blob-length
blob-u8-ref
blob-u8-set!
blob?
* boolean?
* caar
* cadr
call-with-current-continuation
call-with-input-file
call-with-output-file
call-with-values
call/cc
* car
case
case-lambda
catch
cdddar
cddddr
* cdr
* ceiling
ceiling-quotient
ceiling-remainder
ceiling/
char->integer
char-alphabetic?
char-ci<=?
char-ci<?
char-ci=?
char-ci>=?
char-ci>?
char-downcase
char-foldcase
char-lower-case?
char-numeric?
char-ready?
char-upcase
char-upper-case?
char-whitespace?
char<=?
char<?
char=?
char>=?
char>?
* char?
character-port?
close-input-port
close-output-port
command-line
complex?
* cond
cond-expand
* cons
constant
continuation
copy-blob
copy-blob!
copy-partial-blob!
* cos
current-error-port
current-input-port
current-jiffy
current-output-port
current-second
#d
* define
define-record-typedefine-syntax
definition
delay
delete-file
denominator
* display
do
dynamic-wind
#
* else
eof-object?
* eq?
* equal? <- except for lists
eqv?
error
escape
procedure
escape
sequence
euclidean-quotient
euclidean-remainder
euclidean/
* eval
ven? <-- ????
exact
exact->inexact
exact-integer-sqrt
exact-integer?
exact?
exactness
except
* exp
export
expt
* #f
false
file-exists?
finite?
* floor
floor-quotient
floor-remainder
floor/
fold-case@#!fold-case <--??
for-each
force
gcd
get-environment-variable
get-environment-variables
get-output-string
#i
identifier
* if
imag-part
immutable
implementation
restrictionimport
improper
* list
include
include-ci
inexact
inexact->exactinexact?
infinite?
initial
environment
input-port?
integer->char
* integer?
interaction-environment
jiffies-per-second
* lambda
* lcm
* length
* let
* let*
let-syntax
letrec
letrec*
letrec-syntax
* list
list->string
list->vector
list-copy
list-ref
list-set!
list-tail
* list?
* load
location
* log
magnitude
make-blob
make-list
make-parameter
make-polar
make-rectangular
make-string
make-vector
map
max
member
memq
memv
min
modules
modulo
mutable
nan?
negative?
* newline
nil
no-fold-case@#!no-fold-casenot <--- ?
null-environment
* null?
number
* number->string
* number?
numerator
#o
odd?
only
open-input-file
open-input-string
open-output-file
open-output-string
* or
output-port?
pair
* pair?
parameterize
partial-blob
peek-char
peek-u
port-open?
port?
positive?
predicate
prefix
* procedure?
quasiquote
* quote
quotient
raise
raise-continuable
rational?
rationalize
read
read-char
read-u
real-part
real?
remainder
rename
* reverse
round
round-quotient
round-remainder
round/
scheme-report-environment
* set!
* set-car!
* set-cdr!
setcar
* sin
* sqrt
string
string->list
string->number
string->symbol
string->vector
string-append
string-ci<=?
string-ci<?
string-ci=?
string-ci>=?
string-ci>?
string-copy
string-downcase
string-fill!
string-foldcase
string-for-each
string-length
string-map
string-ni<=?
string-ni<?
string-ni=?
string-ni>=?
string-ni>?
string-ref
string-set!
string-upcase
string<=?
string<?
string=?
string>=?
string>?
* string?
substring
symbol->string
* symbol?
syntax-rules
#t
* tan
truncate
truncate-quotient
truncate-remainder
truncate/
u8-ready?
unquote
unquote-splicing
values
vector
vector->list
vector->string
vector-copy
vector-fill!
vector-for-each
vector-length
vector-map
vector-ref
vector-set!
* vector?
with-exception-handler
with-input-from-file
with-output-to-file
* write
write-char
write-u8
#x
* zero?
