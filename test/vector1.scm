;; Test for vectors
(import (scheme base))
(import (scheme write))

(define-syntax run
  (syntax-rules ()
    ((run code)
       (begin
         (display (quote code))
         (display " => ")
         (display code)
         (newline)))))

(run (vector 1 2 3 (list 4 5) 6))
(run (+ 1 2 3))
(run (vector? (vector 'abba)))
(run (vector-length (vector 1 2 3 (list 4 5) 6)))
(run (make-vector 7))
(run (make-vector 7 'a))
(run (vector-ref (vector 1 2 3 (list 4 5) 6) 0))
(run (vector-ref (vector 1 2 3 (list 4 5) 6) 1))
(run (vector-ref (vector 1 2 3 (list 4 5) 6) 2))
(run (vector-ref (vector 1 2 3 (list 4 5) 6) 3))
(run (vector-ref (vector 1 2 3 (list 4 5) 6) 4))
(run (define v (vector 1 2 (list 3 4) 5 6)))
(run v)
(run (vector-set! v 0 10))
(run v)
(run (vector->list (vector 1 2 (vector 3 4) 5 6)))
(run (list->vector '(1 2 3)))
(run (list->vector (list 1 2 (list 3 4) 5 6)))
(run (vector->string (vector #\a #\b #\b #\a)))
(run (string->vector "Hello!"))
(run (define v2 (vector-copy v)))
(run v2)
(run (vector-set! v2 0 #\X))
(run v2)
(run v)
(run (vector-length v2))
(run (vector-fill! v2 #\x))
(run v2)
(run (vector-length v2))
