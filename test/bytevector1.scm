(import (scheme write))
(import (scheme base))

;; Tests for bytevectors

(define-syntax run
  (syntax-rules ()
    ((run code)
       (begin
         (display (quote code))
         (display " => ")
         (display code)
         (newline)))))

(run (bytevector? (vector 1 2 3)))
(run (bytevector? (make-bytevector 3)))
(run (bytevector? (make-bytevector 3 11)))
(run (make-bytevector 3))
(run (make-bytevector 3 11))
(run (define v1 (make-bytevector 3)))
(run (define v2 (make-bytevector 20)))
(run (bytevector-u8-set! v1 0 11))
(run (bytevector-u8-set! v1 1 22))
(run (bytevector-u8-set! v1 2 33))
(run v1)
(run v2)
(run (bytevector-copy! v1 v2))
(run v2)
(run (bytevector-u8-ref v1 0))
(run (bytevector-u8-ref v1 1))
(run (bytevector-u8-ref v1 2))
(run (bytevector-u8-set! v2 1 55))
(run v1)
(run v2)
(run (define v3 (bytevector-copy v2)))
(run (bytevector-u8-set! v3 1 99))
(run v1)
(run v2)
(run v3)
(run (bytevector-length v1))
(run (bytevector-u8-ref v3 0))
(run (bytevector-u8-ref v3 1))
(run (bytevector-u8-ref v3 2))
(run (bytevector-copy-partial v1 0 1))
(run (bytevector-copy-partial v1 0 2))
(run (bytevector-copy-partial v1 0 3))
(run (bytevector-copy-partial v1 1 3))
(run (bytevector-copy-partial v1 2 3))
(run (define v4 (make-bytevector 10)))
(run v4)
(run (bytevector-copy-partial! v1 0 2 v4 0))
(run v4)
(run (bytevector-copy-partial! v1 0 2 v4 3))
(run v4)
(run (bytevector-copy-partial! v1 0 3 v4 6))
(run v4)
